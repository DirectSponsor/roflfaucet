server {
    server_name auth.directsponsor.org;
    root /var/www/auth.directsponsor.org/public_html;
    index index.php index.html;

    # OAuth Core endpoint rewrites
    location = /oauth/token {
        try_files $uri /token.php;
    }
    
    location = /oauth/userinfo {
        try_files $uri /userinfo.php;
    }

    location = /oauth/authorize {
        try_files $uri /authorize.php;
    }

    # OAuth Ecosystem API endpoint rewrites
    location = /oauth/update-user {
        try_files $uri /ecosystem-api.php;
    }
    
    location = /oauth/leaderboard {
        try_files $uri /ecosystem-api.php;
    }
    
    location = /oauth/stats {
        try_files $uri /ecosystem-api.php;
    }

    # CORS headers for cross-origin requests - MOVED TO WORK WITH PHP
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    add_header 'Access-Control-Max-Age' '3600' always;

    # Handle preflight OPTIONS requests
    if ($request_method = 'OPTIONS') {
        return 200;
    }

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        include fastcgi.conf;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        
        # Cache control for API responses
        if ($request_uri ~ "^/oauth/") {
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/auth.directsponsor.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/auth.directsponsor.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = auth.directsponsor.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name auth.directsponsor.org;
    return 404; # managed by Certbot


}

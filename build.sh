#!/bin/bash
# Simple BBEdit-Style Include Processor
# Clean, fast template system for SatoshiHost network sites

echo "🔨 Building HTML files with includes..."

# Function to process includes in a file
process_includes() {
    local input_file="$1"
    local output_file="$2"
    local temp_file=$(mktemp)
    
    echo "📄 Processing: $input_file → $output_file"
    
    # Copy input to temp file
    cp "$input_file" "$temp_file"
    
    # Process all include directives (both old and BBEdit style)
    # <!--#include file="path" --> OR <!-- #bbinclude "path" -->
    while grep -qE '<!--\s*#(bb)?include\s+(file=")?[^"]*"?\s*-->' "$temp_file" 2>/dev/null; do
        # Find the first include
        include_line=$(grep -nE '<!--\s*#(bb)?include\s+' "$temp_file" | head -1)
        line_num=$(echo "$include_line" | cut -d: -f1)
        
        # Extract include path from either syntax
        if echo "$include_line" | grep -q 'file="'; then
            # Old style: <!--#include file="path" -->
            include_path=$(echo "$include_line" | sed 's/.*file="\([^"]*\)".*/\1/' | tr -d ' \t')
        else
            # BBEdit style: <!-- #bbinclude "path" -->
            include_path=$(echo "$include_line" | sed 's/.*#bbinclude\s*"\([^"]*\)".*/\1/' | tr -d ' \t')
        fi
        
        # Add includes/ prefix if not already present
        if [[ "$include_path" != includes/* && -f "includes/$include_path" ]]; then
            include_path="includes/$include_path"
        fi
        
        if [[ -f "$include_path" ]]; then
            echo "  📎 Including: $include_path"
            
            # Create new temp file with include replaced
            new_temp=$(mktemp)
            
            # Copy lines before the include
            head -n $((line_num - 1)) "$temp_file" > "$new_temp"
            
            # Add the included content
            cat "$include_path" >> "$new_temp"
            
            # Copy lines after the include
            tail -n +$((line_num + 1)) "$temp_file" >> "$new_temp"
            
            # Replace temp file
            mv "$new_temp" "$temp_file"
        else
            echo "  ⚠️  Include file not found: $include_path"
            # Remove the include line to prevent infinite loop
            sed -i "${line_num}d" "$temp_file"
        fi
    done
    
    # Add warning header to generated file
    final_temp=$(mktemp)
    template_name=$(basename "$input_file")
    cat > "$final_temp" << EOF
<!-- ⚠️  WARNING: This file is AUTO-GENERATED by build.sh ⚠️  -->
<!-- 🚨 DO NOT EDIT THIS FILE DIRECTLY! 🚨 -->
<!-- -->
<!-- ✏️  To make changes, edit the template file instead: -->
<!-- 📁 templates/$template_name -->
<!-- -->
<!-- 🔧 Then run: ./build.sh -->
<!-- ⚠️  All direct edits to this file will be LOST! ⚠️  -->
<!-- ================================================================ -->

EOF
    
    # Append the processed content
    cat "$temp_file" >> "$final_temp"
    
    # Move final result to output
    mv "$final_temp" "$output_file"
    rm -f "$temp_file"
    echo "  ✅ Built: $output_file"
}

# Build all template files
template_count=0

# Process both .template.html and .tmpl files
for template in templates/*.template.html templates/*.tmpl; do
    if [[ -f "$template" ]]; then
        # Extract filename and determine output name
        if [[ "$template" == *.template.html ]]; then
            basename=$(basename "$template" .template.html)
            output_file="${basename}.html"
        elif [[ "$template" == *.tmpl ]]; then
            basename=$(basename "$template" .tmpl)
            output_file="${basename}.html"
        fi
        
        process_includes "$template" "$output_file"
        ((template_count++))
    fi
done

if [[ $template_count -eq 0 ]]; then
    echo "📁 No template files found in templates/ directory"
    echo "💡 Create files like templates/page.template.html or templates/page.tmpl to get started"
else
    echo ""
    echo "🎉 Build complete! Processed $template_count template(s)"
    echo ""
    echo "📝 Template syntax (choose your style):"
    echo "   Simple:    <!--#include file=\"includes/header.html\" -->"
    echo "   BBEdit:    <!-- #bbinclude \"header.html\""
    echo "              #TITLE#=\"Page Title\""
    echo "              #KEYWORDS#=\"seo, keywords\""
    echo "              -->"
    echo ""
    echo "📂 Directory structure:"
    echo "   templates/           - Your .template.html or .tmpl source files"
    echo "   includes/           - Shared HTML snippets with #PLACEHOLDER# support"
    echo "   *.html              - Generated output files"
fi

# Ensure script exits with success
exit 0

